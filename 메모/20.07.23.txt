Spring Annotation
	-어노테이션은 자바 1.5버전 부터 지원
	-스프링은 어노테이션을 이용하여 bean 과 관련된 정보를 설정할 수 있다.

Spring에서 어노테이션을 사용하기 위해 필요한 설정

	1. 의존성 관련 어노테이션

	<context:annotation=config/>태그를 applicationContext.xml 에 등록
	@Autowired, @Required, @Resource 등등

	Autowired : Spring에서 의존관계를 자동으로 설정할 때 사용
		  생성자(매개변수) , 메소드(매개변수), 필드변수에 적용이 가능하다.
		  해당 타입의 bean객체가 applicationContext에 존재하지 않거나
		  2개 이상 이면 예외가 발생
		  @Qualifier 를 사용하여 2개 이상의 bean 중에서 특정 bean을 사용하도록 지정할 수 있다.
		  아이디로 지정이 가능하다.

	Resource :  어플리케이션에서 필요로 하는 의존성 주입을 해준다.
		  @Resource(name="testDao") 
		  빈 객체의 이름을 지정해서 의존성을 주입한다.

	Required : 필수 Property임을 명시 (반드시 bean의 생성과정에서 호출되어야 하는 Setter메소드)
		 필수 Property를 설정하지 않으면 bean이 생성되지 않음

	2. bean으로 등록하는 것과 관련된 어노테이션

	   <context:component-scan base-package=""/>
	   context:annotation-config +
	   @Component, @Controller, @Service, @Repository 등

	   Component : 클래스 위에 선언하며, 해당 클래스를 자동으로 bean으로 등록한다.
		       bean의 이름은 해당 클래스명이 사용된다. (첫글자는 소문자)

	   Controller : Spring MVC에서 컨트롤러 인식되게 해주는 어노테이션
			클래스 위에 Controller 어노테이션을 지정해야
			RequestMapping, RequestParam 등을 사용할 수 있다.

	   Service : Component와 동일, 가독성을 위해서 만약 해당 클래스가 Service 역할을 한다면 Service
		 어노테이션을 사용하는 것을 권장드립니다.

	   Repository : dao 역할을 하는 클래스에 적용이 된다.
		     발생하는 SqlException(Checked Exception)을 DataAccessException(Unchecked Exception)으로 바꿔준다.
	   	

	3. <mvc:annotation-driven/>
		Spring MVC와 관련된 annotation을 등록 해준다.
		@RequestMapping, @Valid 등등을 자동으로 처리
		
